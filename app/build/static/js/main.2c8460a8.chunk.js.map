{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Search","Input","Wrapper","styled","div","App","useState","weatherInfo","setWeatherInfo","loading","setLoading","placeholder","enterButton","size","onSearch","value","length","axios","get","then","res","data","hoverable","active","cover","alt","src","weather","weather_state_abbr","style","padding","name","the_temp","min_temp","max_temp","humidity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAKQA,EAAWC,IAAXD,OAGFE,EAAUC,IAAOC,IAAV,8KA6DEC,MArDf,WACE,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,OACE,eAACR,EAAD,WACE,iDACA,cAACF,EAAD,CACEW,YAAY,+CACZC,YAAY,SACZC,KAAK,QACLC,SAlBW,SAAAC,GACXA,EAAMC,QAfqB,IAgB7BN,GAAW,GACXO,IAAMC,IAAN,iCAAoCH,IACjCI,MAAK,SAAAC,GACJV,GAAW,GACXF,EAAeY,EAAIC,aAerBZ,GACE,cAAC,IAAD,CACEa,WAAS,EADX,SAGE,cAAC,IAAD,CAAUb,SAAS,EAAMc,QAAM,OAKlCd,GAAWF,GACV,eAAC,IAAD,CACEe,WAAS,EACTE,MAAO,qBAAKC,IAAI,UACdC,IAAG,yDAAoDnB,EAAYoB,QAAQC,mBAAxE,QACHC,MAAO,CAAEC,QAAS,MAJtB,UAME,6BAAKvB,EAAYwB,OACjB,+BAAKxB,EAAYoB,QAAQK,SAAzB,QACA,uCAAUzB,EAAYoB,QAAQM,SAA9B,QACA,uCAAU1B,EAAYoB,QAAQO,SAA9B,QACA,4CAAe3B,EAAYoB,QAAQQ,SAAnC,cCjDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c8460a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Input, Card, Skeleton } from 'antd'\nimport styled from 'styled-components'\n\nconst { Search } = Input;\nconst MIN_LENGTH_TO_START_SEARCH = 3\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: fit-content(100px) fit-content(100px) 1fr;\n  grid-row-gap: 20px;\n  max-width: 600px;\n  padding: 50px;\n`\n\nfunction App() {\n  const [weatherInfo, setWeatherInfo] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  const onSearch = value => {\n    if (value.length >= MIN_LENGTH_TO_START_SEARCH) {\n      setLoading(true)\n      axios.get(`/api/v1/weather/search/${value}`)\n        .then(res => {\n          setLoading(false)\n          setWeatherInfo(res.data)\n        })\n    }\n  }\n\n  return (\n    <Wrapper>\n      <h2>GNT Weather App</h2>\n      <Search\n        placeholder=\"Input the name of a city (eg: San Francisco)\"\n        enterButton=\"Search\"\n        size=\"large\"\n        onSearch={onSearch}\n      />\n      {\n        loading && (\n          <Card\n            hoverable\n          >\n            <Skeleton loading={true} active />\n          </Card>\n        )\n      }\n      {\n        !loading && weatherInfo && (\n          <Card\n            hoverable\n            cover={<img alt=\"weather\"\n              src={`https://www.metaweather.com/static/img/weather/${weatherInfo.weather.weather_state_abbr}.svg`}\n              style={{ padding: 30 }} />}\n          >\n            <h1>{weatherInfo.name}</h1>\n            <h2>{weatherInfo.weather.the_temp} C</h2>\n            <h4>Min: {weatherInfo.weather.min_temp} C</h4>\n            <h4>Max: {weatherInfo.weather.max_temp} C</h4>\n            <h4>Humidity: {weatherInfo.weather.humidity}%</h4>\n          </Card>\n        )\n      }\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}